// *****************************************************
// modified from https://codepen.io/goodkatz/pen/LYPGxQz
// *****************************************************

@import url(//fonts.googleapis.com/css?family=Lato:300:400);
@import "~compass-mixins-fixed/lib/animate";

h1 {
  font-family: 'Lato', sans-serif;
  font-weight:1000;
  letter-spacing: 2px;
  font-size:50px;
}
p {
  font-family: 'Lato', sans-serif;
  letter-spacing: 1px;
  font-size:14px;
  color: #333333;
}

.header {
  position:relative;
  text-align:center;
  background: linear-gradient(60deg, rgb(156, 19, 72) 0%, rgb(236, 75, 0) 100%);
  color:white;
}
.logo {
  width:50px;
  fill:white;
  padding-right:15px;
  display:inline-block;
  vertical-align: middle;
}

.inner-header {
  height:75vh;
  width:100%;
  margin: 0;
  padding: 0;
}

.flex { /*Flexbox for containers*/
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.waves {
  position:relative;
  width: 100%;
  height:5vh;
  margin-bottom:-7px; /*Fix for safari gap*/
  min-height:100px;
  max-height:150px;
}

.content {
  position:relative;
  height:20vh;
  text-align:center;
  background-color: white;
}

/* Animation */

.parallax > use {
  animation: move-forever 25s cubic-bezier(.55,.5,.45,.5)     infinite;
}
.parallax > use:nth-child(1) {
  animation-delay: -2s;
  animation-duration: 7s;
}
.parallax > use:nth-child(2) {
  animation-delay: -3s;
  animation-duration: 10s;
}
.parallax > use:nth-child(3) {
  animation-delay: -4s;
  animation-duration: 13s;
}
.parallax > use:nth-child(4) {
  animation-delay: -5s;
  animation-duration: 20s;
}
@keyframes move-forever {
  0% {
   transform: translate3d(-90px,0,0);
  }
  100% { 
    transform: translate3d(85px,0,0);
  }
}
/*Shrinking for mobile*/
@media (max-width: 768px) {
  .waves {
    height:40px;
    min-height:40px;
  }
  .content {
    height:30vh;
  }
  h1 {
    font-size:24px;
  }
}


@mixin welcomeAnim($i, $fadeTime, $pauseTime, $stagger, $totalTime) {
    @include keyframes(slideFade#{$i}) {
        0% {
            @include opacity(0);
            @include transform(translateY($slideLength));
        }

        #{($i * $stagger)/$totalTime * 100}% {
            @include opacity(0);
            @include transform(translateY($slideLength));
        }

        #{(($i * $stagger) + $fadeTime)/$totalTime * 100}% {
            @include opacity(1);
            @include transform(translateY(0));
        }

        #{(($i * $stagger) + $fadeTime + $pauseTime)/$totalTime * 100}% {
            @include opacity(1);
            @include transform(translateY(0));
        }

        #{(($i * $stagger) + ($fadeTime * 2) + $pauseTime)/$totalTime * 100}% {
            @include opacity(0);
            @include transform(translateY(-$slideLength));
        }

        100% {
            @include opacity(0);
            @include transform(translateY(-$slideLength));
        }
    }
}

h1,
h1 > span {
    height: 100%;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

h1 > span {
    position: absolute;
    opacity: 0;
//    animation: slideFade 4s linear forwards;
}

$slideLength: 0.4em;
$childNum: 5;
$fadeTime: 0.5s;
$pauseTime: 1s;
$stagger: $pauseTime + ($fadeTime * 2);
$totalTime: $stagger * $childNum;

@for $i from 0 through $childNum {
    @include welcomeAnim($i, $fadeTime, $pauseTime, $stagger, $totalTime);
    h1 > span:nth-child(#{($i + 1)}) {
        animation: slideFade#{($i)} $totalTime infinite;
    }
}