// *****************************************************
// modified from https://codepen.io/goodkatz/pen/LYPGxQz
// *****************************************************

@import url(//fonts.googleapis.com/css?family=Lato:300:400);
@import "~compass-mixins-fixed/lib/animate";

h1 {
  font-family: 'Lato', sans-serif;
  font-weight:1000;
  letter-spacing: 2px;
  font-size:50px;
  color: white;
}
p {
  font-family: 'Lato', sans-serif;
  letter-spacing: 1px;
  font-size:14px;
  color: #333333;
}

.landing {
  position:absolute;
  z-index: 1;
  width: 100%;
  height: 70vh;
}

.flex { /*Flexbox for containers*/
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.welcome {
  width: 100%;
  height: 60px;
}

@mixin welcomeAnim($i, $fadeTime, $pauseTime, $stagger, $totalTime) {
    @include keyframes(slideFade#{$i}) {
        0% {
            @include opacity(0);
            @include transform(translateY($slideLength));
        }

        #{($i * $stagger)/$totalTime * 100}% {
            @include opacity(0);
            @include transform(translateY($slideLength));
        }

        #{(($i * $stagger) + $fadeTime)/$totalTime * 100}% {
            @include opacity(1);
            @include transform(translateY(0));
        }

        #{(($i * $stagger) + $fadeTime + $pauseTime)/$totalTime * 100}% {
            @include opacity(1);
            @include transform(translateY(0));
        }

        #{(($i * $stagger) + ($fadeTime * 2) + $pauseTime)/$totalTime * 100}% {
            @include opacity(0);
            @include transform(translateY(-$slideLength));
        }

        100% {
            @include opacity(0);
            @include transform(translateY(-$slideLength));
        }
    }
}

h1,
h1 > span {
    height: 100%;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

h1 > span {
    position: absolute;
    opacity: 0;
//    animation: slideFade 4s linear forwards;
}

$slideLength: 0.4em;
$childNum: 5;
$fadeTime: 0.5s;
$pauseTime: 1s;
$stagger: $pauseTime + ($fadeTime * 2);
$totalTime: $stagger * $childNum;

@for $i from 0 through $childNum {
    @include welcomeAnim($i, $fadeTime, $pauseTime, $stagger, $totalTime);
    h1 > span:nth-child(#{($i + 1)}) {
        animation: slideFade#{($i)} $totalTime infinite;
    }
}